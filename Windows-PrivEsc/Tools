Several scripts exist to conduct system enumeration in ways similar to the ones seen in the previous task. These tools can shorten the enumeration 
process time and uncover different potential privilege escalation vectors. However, please remember that automated tools can sometimes miss privilege 
escalation.

Below are a few tools commonly used to identify privilege escalation vectors. 


1. WinPEAS

WinPEAS is a script developed to enumerate the target system to uncover privilege escalation paths. You can find more information about winPEAS and 
download either the precompiled executable or a .bat script. The output from winPEAS can be lengthy and sometimes difficult to read. This is why it 
would be good practice to always redirect the output to a file, as shown below:

	C:\> winpeas.exe > outputfile.txt

To Download: https://github.com/carlospolop/PEASS-ng/tree/master/winPEAS


2. PrivescCheck

PrivescCheck is a PowerShell script that searches common privilege escalation on the target system. It provides an alternative to WinPEAS without 
requiring the execution of a binary file.

To Download: https://github.com/itm4n/PrivescCheck

Reminder: To run PrivescCheck on the target system, you may need to bypass the execution policy restrictions. To achieve this, you can use the 
	  Set-ExecutionPolicy cmdlet as shown below.

	PS C:\> Set-ExecutionPolicy Bypass -Scope process -Force
	PS C:\> . .\PrivescCheck.ps1
	PS C:\> Invoke-PrivescCheck


3. WES-NG: Windows Exploit Suggester - Next Generation

Some exploit suggesting scripts (e.g. winPEAS) will require you to upload them to the target system and run them there. This may cause antivirus 
software to detect and delete them. To avoid making unnecessary noise that can attract attention, you may prefer to use 'WES-NG', which will run 
on your attacking machine (e.g. Kali).

To Download WES-NG Python script: https://github.com/bitsadmin/wesng

Once installed, and before using it, type the 
	
	wes.py --update 

command to update the database. The script will refer to the database it creates to check for missing patches that can result in a vulnerability 
you can use to elevate your privileges on the target system.

To use the script, you will need to run the 

	systeminfo 

command on the target system. Do not forget to direct the output to a .txt file you will need to move to your attacking machine.

Once this is done, wes.py can be run as follows;

	user@kali$ wes.py systeminfo.txt


4. Metasploit

If you already have a Meterpreter shell on the target system, you can use the 'multi/recon/local_exploit_suggester' module to list vulnerabilities 
that may affect the target system and allow you to elevate your privileges on the target system.












